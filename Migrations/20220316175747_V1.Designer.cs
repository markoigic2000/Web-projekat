// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace _17640Projekat.Migrations
{
    [DbContext(typeof(PikadoContext))]
    [Migration("20220316175747_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("IgracMec", b =>
                {
                    b.Property<int>("igraciMecaIDIgraca")
                        .HasColumnType("int");

                    b.Property<int>("meceviIgracaID")
                        .HasColumnType("int");

                    b.HasKey("igraciMecaIDIgraca", "meceviIgracaID");

                    b.HasIndex("meceviIgracaID");

                    b.ToTable("IgracMec");
                });

            modelBuilder.Entity("Models.Igrac", b =>
                {
                    b.Property<int>("IDIgraca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("brojRegistracije")
                        .HasColumnType("int");

                    b.Property<DateTime>("datumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("klubIgracaID")
                        .HasColumnType("int");

                    b.Property<int>("osvojeniBodovi")
                        .HasColumnType("int");

                    b.Property<int>("osvojeniTurniri")
                        .HasColumnType("int");

                    b.HasKey("IDIgraca");

                    b.HasIndex("klubIgracaID");

                    b.ToTable("Igraci");
                });

            modelBuilder.Entity("Models.Klub", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mejl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sajt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Klubovi");
                });

            modelBuilder.Entity("Models.Mec", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Faza")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("mecNaTurniruID")
                        .HasColumnType("int");

                    b.Property<int?>("sudijaNaMecuIDSudije")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("mecNaTurniruID");

                    b.HasIndex("sudijaNaMecuIDSudije");

                    b.ToTable("Mecevi");
                });

            modelBuilder.Entity("Models.Sudija", b =>
                {
                    b.Property<int>("IDSudije")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mejl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("brojLicence")
                        .HasColumnType("int");

                    b.HasKey("IDSudije");

                    b.ToTable("Sudije");
                });

            modelBuilder.Entity("Models.Turnir", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PobednikIDIgraca")
                        .HasColumnType("int");

                    b.Property<int>("brojBodova")
                        .HasColumnType("int");

                    b.Property<DateTime>("datumOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("nagradniFond")
                        .HasColumnType("int");

                    b.Property<int?>("organizatorTurniraID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PobednikIDIgraca");

                    b.HasIndex("organizatorTurniraID");

                    b.ToTable("Turniri");
                });

            modelBuilder.Entity("IgracMec", b =>
                {
                    b.HasOne("Models.Igrac", null)
                        .WithMany()
                        .HasForeignKey("igraciMecaIDIgraca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Mec", null)
                        .WithMany()
                        .HasForeignKey("meceviIgracaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Igrac", b =>
                {
                    b.HasOne("Models.Klub", "klubIgraca")
                        .WithMany("igraciKluba")
                        .HasForeignKey("klubIgracaID");

                    b.Navigation("klubIgraca");
                });

            modelBuilder.Entity("Models.Mec", b =>
                {
                    b.HasOne("Models.Turnir", "mecNaTurniru")
                        .WithMany("meceviNaTurniru")
                        .HasForeignKey("mecNaTurniruID");

                    b.HasOne("Models.Sudija", "sudijaNaMecu")
                        .WithMany("sudjeniMecevi")
                        .HasForeignKey("sudijaNaMecuIDSudije");

                    b.Navigation("mecNaTurniru");

                    b.Navigation("sudijaNaMecu");
                });

            modelBuilder.Entity("Models.Turnir", b =>
                {
                    b.HasOne("Models.Igrac", "Pobednik")
                        .WithMany("turniriIgraca")
                        .HasForeignKey("PobednikIDIgraca");

                    b.HasOne("Models.Klub", "organizatorTurnira")
                        .WithMany("organizovaniTurniri")
                        .HasForeignKey("organizatorTurniraID");

                    b.Navigation("organizatorTurnira");

                    b.Navigation("Pobednik");
                });

            modelBuilder.Entity("Models.Igrac", b =>
                {
                    b.Navigation("turniriIgraca");
                });

            modelBuilder.Entity("Models.Klub", b =>
                {
                    b.Navigation("igraciKluba");

                    b.Navigation("organizovaniTurniri");
                });

            modelBuilder.Entity("Models.Sudija", b =>
                {
                    b.Navigation("sudjeniMecevi");
                });

            modelBuilder.Entity("Models.Turnir", b =>
                {
                    b.Navigation("meceviNaTurniru");
                });
#pragma warning restore 612, 618
        }
    }
}
